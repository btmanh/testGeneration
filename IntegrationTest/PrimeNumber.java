/*
 * This code was generated by ojc.
 */
import demo.*;
import java.util.*;


public class PrimeNumber
{

    public PrimeNumber()
    {
        trace.add( new java.lang.Integer( 3 ) );
    }

    public int checkPrimeNumber( int a )
    {
        trace.add( new java.lang.Integer( 4 ) );
        if (a <= 1) {
            trace.add( new java.lang.Integer( 5 ) );
            return 1;
        } else {
            trace.add( new java.lang.Integer( 6 ) );
            for (int i = 2; i <= Math.sqrt( a ); i++) {
                trace.add( new java.lang.Integer( 7 ) );
                if (a % i == 0) {
                    trace.add( new java.lang.Integer( 8 ) );
                    return 1;
                } else {
                    trace.add( new java.lang.Integer( 9 ) );
                }
            }
        }
        return a;
    }

    /**
     * if A doesn't include prime number, add 1 to listPrimeNumber to avoid, so listPrimeNumber is not null
     * @param a
     * @return
     */
    public java.util.List createListPrimeNumber( int[] A )
    {
        trace.add( new java.lang.Integer( 10 ) );
        java.util.List listPrimeNumber = new java.util.LinkedList();
        for (int i = 0; i < A.length; i++) {
            trace.add( new java.lang.Integer( 11 ) );
            if (checkPrimeNumber( A[i] ) != 1) {
                trace.add( new java.lang.Integer( 12 ) );
                listPrimeNumber.add( i );
            } else {
                trace.add( new java.lang.Integer( 13 ) );
            }
        }
        if (listPrimeNumber.size() != 0) {
            trace.add( new java.lang.Integer( 14 ) );
            return listPrimeNumber;
        } else {
            trace.add( new java.lang.Integer( 15 ) );
            return null;
        }
    }

    
    static java.util.Set trace = new java.util.HashSet();

    
    public static void newTrace()
    {
        trace = new java.util.HashSet();
    }

    
    public static java.util.Set getTrace()
    {
        return trace;
    }

}
